{"version":3,"sources":["main.js"],"names":["Perf","require","timeline","A","B","schoolBack","solution","i","length","j","getRandomDouble","n","randomDoubles","push","Math","random","slice","half","sumArray","sum","divideIntoHalf","substractArray","lowerHalf","C","difference","CAD4","A0","A1","B0","B1","p0","p1","p2","p3","p4","_divideIntoHalf2","_slicedToArray","_divideIntoHalf4","CAD3","_divideIntoHalf6","_divideIntoHalf8","data2","now","result1","data1","end","console","log","start","start2","result2","end2","result3"],"mappings":"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","file":"main.min.js","sourcesContent":["const Perf = require(\"performance-node\");\r\nconst timeline = new Perf();\r\n\r\nlet A = [1, 2, 3, 4];\r\nlet B = [1, 2, 3, 4];\r\n\r\nfunction schoolBack(A, B) {\r\n  let solution = [];\r\n\r\n  for (let i = 0; i < A.length + B.length - 1; i++) {\r\n    solution[i] = 0;\r\n  }\r\n\r\n  // ierate through all the element of arrays and add the multiplied value to solution\r\n  for (let i = 0; i < A.length; i++) {\r\n    for (j = 0; j < B.length; j++) {\r\n      solution[i + j] += A[i] * B[j];\r\n    }\r\n  }\r\n  return solution;\r\n}\r\n\r\n// generate random number from -1 to 1\r\nfunction getRandomDouble(n) {\r\n  let randomDoubles = [];\r\n  let max = 1;\r\n  let min = -1;\r\n  for (let i = 0; i < n; i++) {\r\n    randomDoubles.push(Math.random() * (max - min + 1) + min);\r\n  }\r\n  return randomDoubles;\r\n}\r\n\r\n//divide array into two halves\r\nfunction divideIntoHalf(A) {\r\n  let half = Math.ceil(A.length / 2);\r\n  let UpperHalf = A.slice(0, half);\r\n  let lowerHalf = A.slice(-half);\r\n  return [UpperHalf, lowerHalf];\r\n}\r\n\r\n// returned the sum of two array\r\nfunction sumArray(A, B) {\r\n  let sum = [];\r\n  for (let i = 0; i < A.length; i++) {\r\n    sum[i] = A[i] + B[i];\r\n  }\r\n  return sum;\r\n}\r\n\r\n// return the substracted result of B and C substracted from A\r\nfunction substractArray(A, B, C) {\r\n  let difference = [];\r\n  for (let i = 0; i < A.length; i++) {\r\n    difference[i] = A[i] - B[i] - C[i];\r\n  }\r\n  return difference;\r\n}\r\n\r\n// four subproblem Divide and Conquer strategy\r\nfunction CAD4(A, B) {\r\n  let A0, A1, B0, B1;\r\n  let p0 = [];\r\n  let p1 = [];\r\n  let p2 = [];\r\n  let p3 = [];\r\n  let p4 = [];\r\n  let solution = [];\r\n\r\n  for (let i = 0; i < A.length + B.length - 1; i++) {\r\n    solution[i] = 0;\r\n  }\r\n\r\n  if (A.length == 1) {\r\n    return [A[0] * B[0], 0];\r\n  }\r\n\r\n  [A0, A1] = divideIntoHalf(A);\r\n  [B0, B1] = divideIntoHalf(B);\r\n\r\n  p0 = CAD4(A0, B0);\r\n  p1 = CAD4(A0, B1);\r\n  p2 = CAD4(A1, B0);\r\n  p3 = CAD4(A1, B1);\r\n\r\n  //   add two array p1 and p2\r\n  for (let i = 0; i < p1.length; i++) {\r\n    p4.push(p1[i] + p2[i]);\r\n  }\r\n\r\n  for (let i = 0, n = A.length; i < n; i++) {\r\n    solution[i] += p0[i];\r\n    solution[i + n / 2] += p1[i];\r\n    solution[i + n / 2] += p2[i];\r\n    solution[i + n] = p3[i];\r\n  }\r\n  return solution;\r\n}\r\n\r\n// three subproblem Divide and Conquer strategy\r\nfunction CAD3(A, B) {\r\n  let A0, A1, B0, B1;\r\n  let p0 = [];\r\n  let p1 = [];\r\n  let p2 = [];\r\n  let p3 = [];\r\n  let p4 = [];\r\n  let solution = [];\r\n\r\n  for (let i = 0; i < A.length + B.length - 1; i++) {\r\n    solution[i] = 0;\r\n  }\r\n\r\n  if (A.length == 1) {\r\n    return [A[0] * B[0], 0];\r\n  }\r\n\r\n  [A0, A1] = divideIntoHalf(A);\r\n  [B0, B1] = divideIntoHalf(B);\r\n\r\n  //here isntead of four recursion we only have to do three recursion\r\n  p0 = CAD3(A0, B0);\r\n  p3 = CAD3(A1, B1);\r\n\r\n  p1 = CAD3(sumArray(A0, A1), sumArray(B0, B1));\r\n\r\n  p4 = substractArray(p1, p0, p3);\r\n\r\n  for (let i = 0, n = A.length; i < n; i++) {\r\n    solution[i] += p0[i];\r\n    solution[i + n / 2] += p4[i];\r\n    solution[i + n] = p3[i];\r\n  }\r\n  return solution;\r\n}\r\n\r\nfor (i = 32; i < 1048576 * 32; i = 2 * i) {\r\n  let data1 = getRandomDouble(i);\r\n  let data2 = getRandomDouble(i);\r\n\r\n  var start = timeline.now();\r\n  let result1 = schoolBack(data1, data2);\r\n  var end = timeline.now();\r\n  console.log(\"school time for \" + i + \" elements \" + (end - start));\r\n\r\n  var start2 = timeline.now();\r\n  let result2 = CAD4(data1, data2);\r\n  var end2 = timeline.now();\r\n  console.log(\"DAC 4 subprob time for \" + i + \" elements \" + (end2 - start2));\r\n\r\n  var start2 = timeline.now();\r\n  let result3 = CAD3(data1, data2);\r\n  var end2 = timeline.now();\r\n  console.log(\"DAC 3 subprob time for  \" + i + \" elements \" + (end2 - start2));\r\n}\r\n"]}